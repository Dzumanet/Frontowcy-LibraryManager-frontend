/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TermsImport } from './routes/terms'
import { Route as PrivacyImport } from './routes/privacy'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as BooksIndexImport } from './routes/books/index'
import { Route as DashboardClientImport } from './routes/dashboard/client'
import { Route as DashboardAdminImport } from './routes/dashboard/admin'
import { Route as BooksIdImport } from './routes/books/$id'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as DashboardClientIndexImport } from './routes/dashboard/client/index'
import { Route as DashboardAdminIndexImport } from './routes/dashboard/admin/index'
import { Route as DashboardClientProfileImport } from './routes/dashboard/client/profile'
import { Route as DashboardClientLoansImport } from './routes/dashboard/client/loans'
import { Route as DashboardAdminProfileImport } from './routes/dashboard/admin/profile'
import { Route as DashboardAdminLogsImport } from './routes/dashboard/admin/logs'
import { Route as DashboardAdminLoansImport } from './routes/dashboard/admin/loans'
import { Route as DashboardAdminBooksImport } from './routes/dashboard/admin/books'
import { Route as DashboardAdminBooksUpdateImport } from './routes/dashboard/admin/books/update'
import { Route as DashboardAdminBooksAddImport } from './routes/dashboard/admin/books/add'
import { Route as DashboardAdminBooksUpdateIdImport } from './routes/dashboard/admin/books/update.$id'
import { Route as DashboardAdminBooksUpdateDeleteIdImport } from './routes/dashboard/admin/books/update.delete.$id'

// Create/Update Routes

const TermsRoute = TermsImport.update({
  id: '/terms',
  path: '/terms',
  getParentRoute: () => rootRoute,
} as any)

const PrivacyRoute = PrivacyImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const BooksIndexRoute = BooksIndexImport.update({
  id: '/books/',
  path: '/books/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardClientRoute = DashboardClientImport.update({
  id: '/client',
  path: '/client',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardAdminRoute = DashboardAdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => DashboardRoute,
} as any)

const BooksIdRoute = BooksIdImport.update({
  id: '/books/$id',
  path: '/books/$id',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardClientIndexRoute = DashboardClientIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardClientRoute,
} as any)

const DashboardAdminIndexRoute = DashboardAdminIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardAdminRoute,
} as any)

const DashboardClientProfileRoute = DashboardClientProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => DashboardClientRoute,
} as any)

const DashboardClientLoansRoute = DashboardClientLoansImport.update({
  id: '/loans',
  path: '/loans',
  getParentRoute: () => DashboardClientRoute,
} as any)

const DashboardAdminProfileRoute = DashboardAdminProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => DashboardAdminRoute,
} as any)

const DashboardAdminLogsRoute = DashboardAdminLogsImport.update({
  id: '/logs',
  path: '/logs',
  getParentRoute: () => DashboardAdminRoute,
} as any)

const DashboardAdminLoansRoute = DashboardAdminLoansImport.update({
  id: '/loans',
  path: '/loans',
  getParentRoute: () => DashboardAdminRoute,
} as any)

const DashboardAdminBooksRoute = DashboardAdminBooksImport.update({
  id: '/books',
  path: '/books',
  getParentRoute: () => DashboardAdminRoute,
} as any)

const DashboardAdminBooksUpdateRoute = DashboardAdminBooksUpdateImport.update({
  id: '/update',
  path: '/update',
  getParentRoute: () => DashboardAdminBooksRoute,
} as any)

const DashboardAdminBooksAddRoute = DashboardAdminBooksAddImport.update({
  id: '/add',
  path: '/add',
  getParentRoute: () => DashboardAdminBooksRoute,
} as any)

const DashboardAdminBooksUpdateIdRoute =
  DashboardAdminBooksUpdateIdImport.update({
    id: '/$id',
    path: '/$id',
    getParentRoute: () => DashboardAdminBooksUpdateRoute,
  } as any)

const DashboardAdminBooksUpdateDeleteIdRoute =
  DashboardAdminBooksUpdateDeleteIdImport.update({
    id: '/delete/$id',
    path: '/delete/$id',
    getParentRoute: () => DashboardAdminBooksUpdateRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/privacy': {
      id: '/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof PrivacyImport
      parentRoute: typeof rootRoute
    }
    '/terms': {
      id: '/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof TermsImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/books/$id': {
      id: '/books/$id'
      path: '/books/$id'
      fullPath: '/books/$id'
      preLoaderRoute: typeof BooksIdImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/admin': {
      id: '/dashboard/admin'
      path: '/admin'
      fullPath: '/dashboard/admin'
      preLoaderRoute: typeof DashboardAdminImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/client': {
      id: '/dashboard/client'
      path: '/client'
      fullPath: '/dashboard/client'
      preLoaderRoute: typeof DashboardClientImport
      parentRoute: typeof DashboardImport
    }
    '/books/': {
      id: '/books/'
      path: '/books'
      fullPath: '/books'
      preLoaderRoute: typeof BooksIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/admin/books': {
      id: '/dashboard/admin/books'
      path: '/books'
      fullPath: '/dashboard/admin/books'
      preLoaderRoute: typeof DashboardAdminBooksImport
      parentRoute: typeof DashboardAdminImport
    }
    '/dashboard/admin/loans': {
      id: '/dashboard/admin/loans'
      path: '/loans'
      fullPath: '/dashboard/admin/loans'
      preLoaderRoute: typeof DashboardAdminLoansImport
      parentRoute: typeof DashboardAdminImport
    }
    '/dashboard/admin/logs': {
      id: '/dashboard/admin/logs'
      path: '/logs'
      fullPath: '/dashboard/admin/logs'
      preLoaderRoute: typeof DashboardAdminLogsImport
      parentRoute: typeof DashboardAdminImport
    }
    '/dashboard/admin/profile': {
      id: '/dashboard/admin/profile'
      path: '/profile'
      fullPath: '/dashboard/admin/profile'
      preLoaderRoute: typeof DashboardAdminProfileImport
      parentRoute: typeof DashboardAdminImport
    }
    '/dashboard/client/loans': {
      id: '/dashboard/client/loans'
      path: '/loans'
      fullPath: '/dashboard/client/loans'
      preLoaderRoute: typeof DashboardClientLoansImport
      parentRoute: typeof DashboardClientImport
    }
    '/dashboard/client/profile': {
      id: '/dashboard/client/profile'
      path: '/profile'
      fullPath: '/dashboard/client/profile'
      preLoaderRoute: typeof DashboardClientProfileImport
      parentRoute: typeof DashboardClientImport
    }
    '/dashboard/admin/': {
      id: '/dashboard/admin/'
      path: '/'
      fullPath: '/dashboard/admin/'
      preLoaderRoute: typeof DashboardAdminIndexImport
      parentRoute: typeof DashboardAdminImport
    }
    '/dashboard/client/': {
      id: '/dashboard/client/'
      path: '/'
      fullPath: '/dashboard/client/'
      preLoaderRoute: typeof DashboardClientIndexImport
      parentRoute: typeof DashboardClientImport
    }
    '/dashboard/admin/books/add': {
      id: '/dashboard/admin/books/add'
      path: '/add'
      fullPath: '/dashboard/admin/books/add'
      preLoaderRoute: typeof DashboardAdminBooksAddImport
      parentRoute: typeof DashboardAdminBooksImport
    }
    '/dashboard/admin/books/update': {
      id: '/dashboard/admin/books/update'
      path: '/update'
      fullPath: '/dashboard/admin/books/update'
      preLoaderRoute: typeof DashboardAdminBooksUpdateImport
      parentRoute: typeof DashboardAdminBooksImport
    }
    '/dashboard/admin/books/update/$id': {
      id: '/dashboard/admin/books/update/$id'
      path: '/$id'
      fullPath: '/dashboard/admin/books/update/$id'
      preLoaderRoute: typeof DashboardAdminBooksUpdateIdImport
      parentRoute: typeof DashboardAdminBooksUpdateImport
    }
    '/dashboard/admin/books/update/delete/$id': {
      id: '/dashboard/admin/books/update/delete/$id'
      path: '/delete/$id'
      fullPath: '/dashboard/admin/books/update/delete/$id'
      preLoaderRoute: typeof DashboardAdminBooksUpdateDeleteIdImport
      parentRoute: typeof DashboardAdminBooksUpdateImport
    }
  }
}

// Create and export the route tree

interface DashboardAdminBooksUpdateRouteChildren {
  DashboardAdminBooksUpdateIdRoute: typeof DashboardAdminBooksUpdateIdRoute
  DashboardAdminBooksUpdateDeleteIdRoute: typeof DashboardAdminBooksUpdateDeleteIdRoute
}

const DashboardAdminBooksUpdateRouteChildren: DashboardAdminBooksUpdateRouteChildren =
  {
    DashboardAdminBooksUpdateIdRoute: DashboardAdminBooksUpdateIdRoute,
    DashboardAdminBooksUpdateDeleteIdRoute:
      DashboardAdminBooksUpdateDeleteIdRoute,
  }

const DashboardAdminBooksUpdateRouteWithChildren =
  DashboardAdminBooksUpdateRoute._addFileChildren(
    DashboardAdminBooksUpdateRouteChildren,
  )

interface DashboardAdminBooksRouteChildren {
  DashboardAdminBooksAddRoute: typeof DashboardAdminBooksAddRoute
  DashboardAdminBooksUpdateRoute: typeof DashboardAdminBooksUpdateRouteWithChildren
}

const DashboardAdminBooksRouteChildren: DashboardAdminBooksRouteChildren = {
  DashboardAdminBooksAddRoute: DashboardAdminBooksAddRoute,
  DashboardAdminBooksUpdateRoute: DashboardAdminBooksUpdateRouteWithChildren,
}

const DashboardAdminBooksRouteWithChildren =
  DashboardAdminBooksRoute._addFileChildren(DashboardAdminBooksRouteChildren)

interface DashboardAdminRouteChildren {
  DashboardAdminBooksRoute: typeof DashboardAdminBooksRouteWithChildren
  DashboardAdminLoansRoute: typeof DashboardAdminLoansRoute
  DashboardAdminLogsRoute: typeof DashboardAdminLogsRoute
  DashboardAdminProfileRoute: typeof DashboardAdminProfileRoute
  DashboardAdminIndexRoute: typeof DashboardAdminIndexRoute
}

const DashboardAdminRouteChildren: DashboardAdminRouteChildren = {
  DashboardAdminBooksRoute: DashboardAdminBooksRouteWithChildren,
  DashboardAdminLoansRoute: DashboardAdminLoansRoute,
  DashboardAdminLogsRoute: DashboardAdminLogsRoute,
  DashboardAdminProfileRoute: DashboardAdminProfileRoute,
  DashboardAdminIndexRoute: DashboardAdminIndexRoute,
}

const DashboardAdminRouteWithChildren = DashboardAdminRoute._addFileChildren(
  DashboardAdminRouteChildren,
)

interface DashboardClientRouteChildren {
  DashboardClientLoansRoute: typeof DashboardClientLoansRoute
  DashboardClientProfileRoute: typeof DashboardClientProfileRoute
  DashboardClientIndexRoute: typeof DashboardClientIndexRoute
}

const DashboardClientRouteChildren: DashboardClientRouteChildren = {
  DashboardClientLoansRoute: DashboardClientLoansRoute,
  DashboardClientProfileRoute: DashboardClientProfileRoute,
  DashboardClientIndexRoute: DashboardClientIndexRoute,
}

const DashboardClientRouteWithChildren = DashboardClientRoute._addFileChildren(
  DashboardClientRouteChildren,
)

interface DashboardRouteChildren {
  DashboardAdminRoute: typeof DashboardAdminRouteWithChildren
  DashboardClientRoute: typeof DashboardClientRouteWithChildren
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAdminRoute: DashboardAdminRouteWithChildren,
  DashboardClientRoute: DashboardClientRouteWithChildren,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/privacy': typeof PrivacyRoute
  '/terms': typeof TermsRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/books/$id': typeof BooksIdRoute
  '/dashboard/admin': typeof DashboardAdminRouteWithChildren
  '/dashboard/client': typeof DashboardClientRouteWithChildren
  '/books': typeof BooksIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/admin/books': typeof DashboardAdminBooksRouteWithChildren
  '/dashboard/admin/loans': typeof DashboardAdminLoansRoute
  '/dashboard/admin/logs': typeof DashboardAdminLogsRoute
  '/dashboard/admin/profile': typeof DashboardAdminProfileRoute
  '/dashboard/client/loans': typeof DashboardClientLoansRoute
  '/dashboard/client/profile': typeof DashboardClientProfileRoute
  '/dashboard/admin/': typeof DashboardAdminIndexRoute
  '/dashboard/client/': typeof DashboardClientIndexRoute
  '/dashboard/admin/books/add': typeof DashboardAdminBooksAddRoute
  '/dashboard/admin/books/update': typeof DashboardAdminBooksUpdateRouteWithChildren
  '/dashboard/admin/books/update/$id': typeof DashboardAdminBooksUpdateIdRoute
  '/dashboard/admin/books/update/delete/$id': typeof DashboardAdminBooksUpdateDeleteIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/privacy': typeof PrivacyRoute
  '/terms': typeof TermsRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/books/$id': typeof BooksIdRoute
  '/books': typeof BooksIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/admin/books': typeof DashboardAdminBooksRouteWithChildren
  '/dashboard/admin/loans': typeof DashboardAdminLoansRoute
  '/dashboard/admin/logs': typeof DashboardAdminLogsRoute
  '/dashboard/admin/profile': typeof DashboardAdminProfileRoute
  '/dashboard/client/loans': typeof DashboardClientLoansRoute
  '/dashboard/client/profile': typeof DashboardClientProfileRoute
  '/dashboard/admin': typeof DashboardAdminIndexRoute
  '/dashboard/client': typeof DashboardClientIndexRoute
  '/dashboard/admin/books/add': typeof DashboardAdminBooksAddRoute
  '/dashboard/admin/books/update': typeof DashboardAdminBooksUpdateRouteWithChildren
  '/dashboard/admin/books/update/$id': typeof DashboardAdminBooksUpdateIdRoute
  '/dashboard/admin/books/update/delete/$id': typeof DashboardAdminBooksUpdateDeleteIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/privacy': typeof PrivacyRoute
  '/terms': typeof TermsRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/books/$id': typeof BooksIdRoute
  '/dashboard/admin': typeof DashboardAdminRouteWithChildren
  '/dashboard/client': typeof DashboardClientRouteWithChildren
  '/books/': typeof BooksIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/admin/books': typeof DashboardAdminBooksRouteWithChildren
  '/dashboard/admin/loans': typeof DashboardAdminLoansRoute
  '/dashboard/admin/logs': typeof DashboardAdminLogsRoute
  '/dashboard/admin/profile': typeof DashboardAdminProfileRoute
  '/dashboard/client/loans': typeof DashboardClientLoansRoute
  '/dashboard/client/profile': typeof DashboardClientProfileRoute
  '/dashboard/admin/': typeof DashboardAdminIndexRoute
  '/dashboard/client/': typeof DashboardClientIndexRoute
  '/dashboard/admin/books/add': typeof DashboardAdminBooksAddRoute
  '/dashboard/admin/books/update': typeof DashboardAdminBooksUpdateRouteWithChildren
  '/dashboard/admin/books/update/$id': typeof DashboardAdminBooksUpdateIdRoute
  '/dashboard/admin/books/update/delete/$id': typeof DashboardAdminBooksUpdateDeleteIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/privacy'
    | '/terms'
    | '/auth/login'
    | '/auth/register'
    | '/books/$id'
    | '/dashboard/admin'
    | '/dashboard/client'
    | '/books'
    | '/dashboard/'
    | '/dashboard/admin/books'
    | '/dashboard/admin/loans'
    | '/dashboard/admin/logs'
    | '/dashboard/admin/profile'
    | '/dashboard/client/loans'
    | '/dashboard/client/profile'
    | '/dashboard/admin/'
    | '/dashboard/client/'
    | '/dashboard/admin/books/add'
    | '/dashboard/admin/books/update'
    | '/dashboard/admin/books/update/$id'
    | '/dashboard/admin/books/update/delete/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/privacy'
    | '/terms'
    | '/auth/login'
    | '/auth/register'
    | '/books/$id'
    | '/books'
    | '/dashboard'
    | '/dashboard/admin/books'
    | '/dashboard/admin/loans'
    | '/dashboard/admin/logs'
    | '/dashboard/admin/profile'
    | '/dashboard/client/loans'
    | '/dashboard/client/profile'
    | '/dashboard/admin'
    | '/dashboard/client'
    | '/dashboard/admin/books/add'
    | '/dashboard/admin/books/update'
    | '/dashboard/admin/books/update/$id'
    | '/dashboard/admin/books/update/delete/$id'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/privacy'
    | '/terms'
    | '/auth/login'
    | '/auth/register'
    | '/books/$id'
    | '/dashboard/admin'
    | '/dashboard/client'
    | '/books/'
    | '/dashboard/'
    | '/dashboard/admin/books'
    | '/dashboard/admin/loans'
    | '/dashboard/admin/logs'
    | '/dashboard/admin/profile'
    | '/dashboard/client/loans'
    | '/dashboard/client/profile'
    | '/dashboard/admin/'
    | '/dashboard/client/'
    | '/dashboard/admin/books/add'
    | '/dashboard/admin/books/update'
    | '/dashboard/admin/books/update/$id'
    | '/dashboard/admin/books/update/delete/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  PrivacyRoute: typeof PrivacyRoute
  TermsRoute: typeof TermsRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  BooksIdRoute: typeof BooksIdRoute
  BooksIndexRoute: typeof BooksIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
  PrivacyRoute: PrivacyRoute,
  TermsRoute: TermsRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  BooksIdRoute: BooksIdRoute,
  BooksIndexRoute: BooksIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/privacy",
        "/terms",
        "/auth/login",
        "/auth/register",
        "/books/$id",
        "/books/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx",
      "children": [
        "/dashboard/admin",
        "/dashboard/client",
        "/dashboard/"
      ]
    },
    "/privacy": {
      "filePath": "privacy.tsx"
    },
    "/terms": {
      "filePath": "terms.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/register": {
      "filePath": "auth/register.tsx"
    },
    "/books/$id": {
      "filePath": "books/$id.tsx"
    },
    "/dashboard/admin": {
      "filePath": "dashboard/admin.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/admin/books",
        "/dashboard/admin/loans",
        "/dashboard/admin/logs",
        "/dashboard/admin/profile",
        "/dashboard/admin/"
      ]
    },
    "/dashboard/client": {
      "filePath": "dashboard/client.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/client/loans",
        "/dashboard/client/profile",
        "/dashboard/client/"
      ]
    },
    "/books/": {
      "filePath": "books/index.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/admin/books": {
      "filePath": "dashboard/admin/books.tsx",
      "parent": "/dashboard/admin",
      "children": [
        "/dashboard/admin/books/add",
        "/dashboard/admin/books/update"
      ]
    },
    "/dashboard/admin/loans": {
      "filePath": "dashboard/admin/loans.tsx",
      "parent": "/dashboard/admin"
    },
    "/dashboard/admin/logs": {
      "filePath": "dashboard/admin/logs.tsx",
      "parent": "/dashboard/admin"
    },
    "/dashboard/admin/profile": {
      "filePath": "dashboard/admin/profile.tsx",
      "parent": "/dashboard/admin"
    },
    "/dashboard/client/loans": {
      "filePath": "dashboard/client/loans.tsx",
      "parent": "/dashboard/client"
    },
    "/dashboard/client/profile": {
      "filePath": "dashboard/client/profile.tsx",
      "parent": "/dashboard/client"
    },
    "/dashboard/admin/": {
      "filePath": "dashboard/admin/index.tsx",
      "parent": "/dashboard/admin"
    },
    "/dashboard/client/": {
      "filePath": "dashboard/client/index.tsx",
      "parent": "/dashboard/client"
    },
    "/dashboard/admin/books/add": {
      "filePath": "dashboard/admin/books/add.tsx",
      "parent": "/dashboard/admin/books"
    },
    "/dashboard/admin/books/update": {
      "filePath": "dashboard/admin/books/update.tsx",
      "parent": "/dashboard/admin/books",
      "children": [
        "/dashboard/admin/books/update/$id",
        "/dashboard/admin/books/update/delete/$id"
      ]
    },
    "/dashboard/admin/books/update/$id": {
      "filePath": "dashboard/admin/books/update.$id.tsx",
      "parent": "/dashboard/admin/books/update"
    },
    "/dashboard/admin/books/update/delete/$id": {
      "filePath": "dashboard/admin/books/update.delete.$id.tsx",
      "parent": "/dashboard/admin/books/update"
    }
  }
}
ROUTE_MANIFEST_END */
